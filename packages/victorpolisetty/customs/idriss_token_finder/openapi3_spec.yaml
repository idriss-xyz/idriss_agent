openapi: 3.0.0
info:
  title: Farcaster Agent API
  description: API for an agent that analyzes Farcaster data and generates transaction payloads for relevant buy opportunities.
  version: 1.0.0
servers:
  - url: http://0.0.0.0:5555
paths:
  /api/analyze:
    post:
      summary: Analyze Farcaster data for search results
      description: Analyzes Farcaster posts based on the specified parameters.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeRequest'  # Reference to schema defined below
      responses:
        '200':
          description: Successful analysis
          content:
            application/json:
              schema:
                type: string # Reference to schema defined below
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Explanation of the error (e.g., missing `query`)
  /api/user/{walletAddress}:
      get:
        summary: Retrieve user information by wallet address
        description: Returns the user's information if it exists in the database.
        parameters:
          - name: walletAddress
            in: path
            required: true
            description: The unique wallet address of the user.
            schema:
              type: string
        responses:
          '200':
            description: User information retrieved successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    walletAddress:
                      type: string
                      description: The wallet address of the user.
                    count:
                      type: integer
                      description: Count value associated with the user.
                    text:
                      type: string
                      description: Text or post associated with the user.
                    engagement:
                      type: string
                      description: Engagement data (e.g., "reactions, recasts").
          '404':
            description: User not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Error message indicating the user was not found.
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Explanation of the error.
  /api/wallet/{walletAddress}:
    get:
      summary: Check Wallet and Query SearchCaster
      description: Checks if the specified wallet address exists in the database. If it exists, calls the SearchCaster API with the parameters associated with the wallet address.
      parameters:
        - name: walletAddress
          in: path
          required: true
          description: The wallet address to look up in the database.
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the SearchCaster API results.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  parameters:
                    type: object
                  first_ticker:
                    type: string
                    example: $SOCIAL
        '404':
          description: Wallet address not found in the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Wallet address not found.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error

components:
  schemas:
    AnalyzeRequest:
      x-persistent: true  # Marking the schema as persistent
      type: object
      properties:
        walletAddress:
          type: string
          description: The unique wallet address of the user.
        count:
          type: integer
          description: Optional count value associated with the user.
          nullable: true
        text:
          type: string
          description: Optional text (e.g., a post or message).
          nullable: true
        engagement:
          type: string  # Change engagement to a simple string in the request body
          description: Optional engagement data (e.g., "100 reactions, 5 recasts").
          nullable: true
      required:
        - walletAddress  # walletAddress is mandatory for the request
